import telebot
from telebot import types

from config import FeedbackAboutBots_bot_TOKEN
from about_LFB import about
from sql_LFB import DataBase, check_tables, get_record, print_data, get_info_about_message

bot = telebot.TeleBot(FeedbackAboutBots_bot_TOKEN)
current_stage = "None"
debug_stage = 0
is_finished = False

db_dict = {}


def manager(message):
    """
        This function determines which stage the user is currently at and what needs to be done at this stage.
        Returns True, if program has been finished, else False
    """
    global current_stage, debug_stage
    if message.text == "/start":
        check_tables()
    # recording necessary info about sent message
    get_info_about_message(message.from_user.id, message.text) if __name__ != "__main__" else ...
    if message.text == "/about":
        about(message, bot)
    elif message.text == "/admin" or debug_stage > 0 or debug_stage == -1:
        admin(message)
    elif current_stage == "None" and message.text == "/start":
        feedback(message)
    elif current_stage not in ["None", "–í—ã–±–æ—Ä", "–û—Ç–∑—ã–≤"]:
        bot.send_message(message.from_user.id, "<b>–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–ø–æ–ª–∞–¥–∫–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ. "
                                               "–í—ã–ø–æ–ª–Ω—è—é –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...</b>",
                         parse_mode='html')
        bot.stop_bot()
        raise SystemError("–°–±–æ–π –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞!")

    return is_finished


def admin(message):
    global debug_stage
    match debug_stage:
        case -1:
            bot.send_message(message.chat.id, "‚ùå –Ø –≤–∞—Å –Ω–µ –ø—Ä–∏–∑–Ω–∞—é")
            debug_stage = 0
        case 0:
            bot.send_message(message.chat.id, "üëâ –í–∞—à–µ –∏–º—è:")
            debug_stage += 1 if message.text == "–ê–ª–µ–∫—Å–µ–π" else -1
        case 1:
            bot.send_message(message.from_user.id, "üëâ –í–∞—à–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –õ–ì–ë–¢, "
                             "–ë–õ–ú –∏ –¥–≤–∏–∂–µ–Ω–∏—é –Ω–µ–æ–Ω–∞—Ü–∏—Å—Ç–æ–≤(–Ω–µ–æ–Ω–∞—Ü–∏–∑–º) –≤ –£–∫—Ä–∞–∏–Ω–µ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º:")
            debug_stage += 1 if message.text == "–ì–æ–≤–Ω–æ" else -2
        case 2:
            bot.send_message(message.chat.id, "üëâ –ù–∞–∑–≤–∞–Ω–∏–µ –í–∞—à–µ–≥–æ YouTube-–∫–∞–Ω–∞–ª–∞ "
                                              "–∏–ª–∏ –í–∞—à –ª—é–±–∏–º—ã–π –Ω–∏–∫–Ω–µ–π–º –≤ –∏–≥—Ä–∞—Ö:")
            debug_stage += 1 if message.text == "–ø—Ä–∏–∫–æ–ª—è–º–±–∞" else -3
        case 3:
            bot.send_message(message.chat.id, "üëâ –í–∞—à ID:")
            debug_stage += 1 if message.text == "1272372338" else -4
        case 4:
            bot.send_message(message.chat.id, "üëâ –í–∞—à –ø–∞—Ä–æ–ª—å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞:")
            debug_stage += 1 if message.text == "–ø–æ—à—ë–ª –Ω–∞—Ö—É–π —É—ë–±–∏—â–µ –µ–±—É—á–µ–µ" else -5
        case 5:
            bot.send_message(message.chat.id, "‚úî –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏, —á—Ç–æ —è–≤–ª—è–µ—Ç–µ—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º!")
            debug_stage += 2
        case 7:
            match message.text:
                case "/pr_d":
                    ...
                case "/check_db":
                    ...
                case "/add_db":
                    ...
                case "/ahelp":
                    ...
